pub type DoublesTeam = {
  id: string,
  players: (Player, Player),
};

impl Team for DoublesTeam {
  pub fn teamId(self) -> string {
    self.id
  }
}

/// This is a doc comment.
///
/// I can reference the [height] field with this syntax. I can also
/// reference [country] because [Player] is a [Citizen].
pub type Player =
  & {
      height: mut Height,
      team: Team?,
    }
  & Citizen
  & Person;

type Citizen = { country: Country };

type Person = {
  age: int,
  names: [string],
};

impl auto Debug, Display for Player {}

enum Height {
  Imperial(Measurement::Ft, Measurement::In),
  Metric(Measurement::Cm),
};

type Measurement =
  | enum ImperialMeasurement {
      Ft(float),
      In(float),
    }
  | enum MetricMeasurement {
      Cm(float),
    };

---
from indigo use Debug, Display, float::{Self, Clone};

from ~/entities/sport use Team;

from ../util use Country;