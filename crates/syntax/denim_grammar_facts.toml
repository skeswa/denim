# Names of AST tokens used while parsing:
ast_token_names = [
    "Whitespace",
    "Comment",
    "String",
    "IntNumber",
    "FloatNumber",
    "Char",
    "Byte",
    "Ident",
]
# Keywords that are only keywords in very specific parsing contexts:
contextual_keywords = [
  # (This is a thing in Rust, but not in Denim so far - this is hold over from
  # Rust Analyzer's source code).
]
# Rules in the .ungram that are implemented in the parser itself instead of the
# grammar specification:
manually_implemented_rule = [
    "lhs",
    "rhs",
    "then_branch",
    "else_branch",
    "start",
    "end",
    "op",
    "index",
    "base",
    "value",
    "trait",
    "self_ty",
    "iterable",
    "condition",
    "args",
    "body",
]
# Nodes in the .ungram that can have doc comments on them:
nodes_with_doc_comments = [
    "CodeSection",
    "MetaSection",
    "Fn",
    "RecordTypeField",
    "RecordField",
    "TupleField",
    "Enum",
    "Variant",
    "Trait",
    "TypeAlias",
    "Impl",
    "DepItem",
]
# Words that should be treated as keywords even though they aren't formally
# defined as keywords yet.
reserved_words = [
  # (This is a thing in Rust, but not in Denim so far - this is hold over from
  # Rust Analyzer's source code).
]

# Maps pieces of punctuation to words that can be used in source code.
[punctuation-names]
"$" = "DOLLAR"
";" = "SEMICOLON"
"," = "COMMA"
"(" = "L_PAREN"
")" = "R_PAREN"
"{" = "L_CURLY"
"}" = "R_CURLY"
"[" = "L_BRACK"
"]" = "R_BRACK"
"<" = "L_ANGLE"
">" = "R_ANGLE"
"@" = "AT"
"#" = "POUND"
"~" = "TILDE"
"?" = "QUESTION"
"&" = "AMP"
"|" = "PIPE"
"+" = "PLUS"
"*" = "STAR"
"/" = "SLASH"
"%" = "PERCENT"
"_" = "UNDERSCORE"
"." = "DOT"
".." = "DOTDOT"
"..." = "DOTDOTDOT"
"..=" = "DOTDOTEQ"
":" = "COLON"
"::" = "DOTRO"
"=" = "EQ"
"==" = "EQEQ"
"===" = "EQEQEQ"
"=>" = "FAT_ARROW"
"!" = "BANG"
"!=" = "NEQ"
"!==" = "NEQEQ"
"-" = "MINUS"
"---" = "SECSEP"
"->" = "THIN_ARROW"
"<=" = "LTEQ"